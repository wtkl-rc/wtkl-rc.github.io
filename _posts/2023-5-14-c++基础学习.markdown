---
layout: post
title:  "c++基础学习"
date:   2023-05-14 08:54:15 +0800
categories: jekyll c++基础学习
---



# 构造函数与析构函数

深浅拷贝

# 纯虚函数

纯虚函数或抽象类，没有函数体只是在基类进行声明，派生类必须实现函数才能创建对象。

```
virtual void abstractFunction() = 0;  //=0表示这个函数是纯虚函数
```

# 虚函数

虚函数就是能在派生类中被重写，从而实现多态性。

```
class Shape {
public:
    virtual void draw();
    // ...
};
```

# 抽象类

抽象类是一种特殊的类，他不能被实例化，只能被用作派生类的基类，抽象类内必须包含至少一个纯虚函数。

# 动态联编

就是运行时多态

# 双目运算符



# 模板函数

# 多态

分为编译时多态和运行时多态

虚函数是用于实现运行时多态

# 虚基类



# 多态性和虚函数



隐藏规则，赋值兼容原则，多态性

函数还不能放在析构函数后面



**1、在动态分配堆上内存的时候，析构函数必须是虚函数**

**原因：**动态分配堆上内存，无法自动回收。若基类指针指向派生类，然后基类指针调用`delete`方法，只能释放基类的内存，无法释放派生类特有的部分内存，进而导致内存泄露。

析构函数定义成虚函数，基类指针调用`delete`方法，会先调用派生类的析构函数，然后自动调用基类的析构函数。

析构函数必须是定义虚函数，但没有必要是纯虚的。



```
char ch[10]={'/0'};         ch[0]=='/0'
```









有四个运算符不可以重载

堆内存是程序员自己管理的，栈内存是系统管理的

基类的析构函数，设为虚类，这样的话只会产生一个堆对象，应该是吧



# 类的组合和聚集

将数据成员中包含对象成员的类称为组合类    同生共死

数据成员中包含对象指针的类称为聚合类      不是同生共死





const  传入使用



栈

析构函数 

先创建的对象后出来



构建

祖先（基类）先客人再自己



析构

先自己再客人 祖先



差不多就是初始化的意思

```
ListNode() : val(0), next(nullptr) {}
等效于下面的代码
ListNode( ) {    val = 0;    next = nullptr; }
```



